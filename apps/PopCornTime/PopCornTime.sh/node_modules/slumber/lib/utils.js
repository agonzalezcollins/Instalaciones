// Generated by CoffeeScript 1.10.0
(function() {
  var debug, extend,
    slice = [].slice;

  debug = require('debug')('slumber:utils');

  module.exports.callable = function(ctor) {
    var callable_ctor, ref;
    callable_ctor = function() {
      var a, obj, result;
      a = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      obj = function() {
        return obj.callable.apply(obj, arguments);
      };
      obj.__proto__ = ctor.prototype;
      result = ctor.call.apply(ctor, [obj].concat(slice.call(a)));
      if (typeof result === 'object') {
        return result;
      } else {
        return obj;
      }
    };
    callable_ctor.__proto__ = ctor;
    callable_ctor.prototype = ctor.prototype;
    ref = Function.prototype, callable_ctor.prototype.call = ref.call, callable_ctor.prototype.apply = ref.apply;
    return callable_ctor;
  };

  module.exports.append_slash = function(str) {
    return str.replace(/\/$/, '') + '/';
  };

  exports.merge = function(options, overrides) {
    return extend(extend({}, options), overrides);
  };

  extend = exports.extend = function(object, properties) {
    var key, val;
    for (key in properties) {
      val = properties[key];
      object[key] = val;
    }
    return object;
  };

  exports.hasInsensitive = function(object, key) {
    var k, v;
    if (!key) {
      return false;
    }
    key = key.toLowerCase();
    for (k in object) {
      v = object[k];
      if (key === k.toLowerCase()) {
        return true;
      }
    }
    return false;
  };

}).call(this);
